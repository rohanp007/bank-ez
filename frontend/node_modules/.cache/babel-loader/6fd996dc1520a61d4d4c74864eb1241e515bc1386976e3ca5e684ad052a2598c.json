{"ast":null,"code":"import axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n// Set the base URL of your backend server\nconst api = axios.create({\n  baseURL: 'http://10.155.164.0:5000/api'\n});\n\n// Intercept each request to add Authorization header\napi.interceptors.request.use(async config => {\n  const token = await AsyncStorage.getItem('accessToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// User Registration\nexport const registerUser = async (username, email, password) => {\n  try {\n    const response = await api.post('/auth/register', {\n      username,\n      email,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Register Error:', error.response.data);\n    throw error;\n  }\n};\n\n// User Login\nexport const loginUser = async (email, password) => {\n  try {\n    const response = await api.post('/auth/login', {\n      email,\n      password\n    });\n    await AsyncStorage.setItem('accessToken', response.data.accessToken);\n    await AsyncStorage.setItem('refreshToken', response.data.refreshToken);\n    return response.data;\n  } catch (error) {\n    console.error('Login Error:', error.response.data);\n    throw error;\n  }\n};\n\n// Deposit Funds\nexport const depositFunds = async (accountId, amount) => {\n  try {\n    const response = await api.post('/transactions/deposit', {\n      accountId,\n      amount\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Deposit Error:', error.response.data);\n    throw error;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","AsyncStorage","api","create","baseURL","interceptors","request","use","config","token","getItem","headers","Authorization","registerUser","username","email","password","response","post","data","error","console","loginUser","setItem","accessToken","refreshToken","depositFunds","accountId","amount"],"sources":["C:/Users/rohan_gs/bank-ez/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n// Set the base URL of your backend server\r\nconst api = axios.create({\r\n  baseURL: 'http://10.155.164.0:5000/api',\r\n});\r\n\r\n// Intercept each request to add Authorization header\r\napi.interceptors.request.use(async (config) => {\r\n  const token = await AsyncStorage.getItem('accessToken');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// User Registration\r\nexport const registerUser = async (username, email, password) => {\r\n  try {\r\n    const response = await api.post('/auth/register', { username, email, password });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Register Error:', error.response.data);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// User Login\r\nexport const loginUser = async (email, password) => {\r\n  try {\r\n    const response = await api.post('/auth/login', { email, password });\r\n    await AsyncStorage.setItem('accessToken', response.data.accessToken);\r\n    await AsyncStorage.setItem('refreshToken', response.data.refreshToken);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Login Error:', error.response.data);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Deposit Funds\r\nexport const depositFunds = async (accountId, amount) => {\r\n  try {\r\n    const response = await api.post('/transactions/deposit', { accountId, amount });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Deposit Error:', error.response.data);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,2CAA2C;;AAEpE;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,MAAOC,MAAM,IAAK;EAC7C,MAAMC,KAAK,GAAG,MAAMR,YAAY,CAACS,OAAO,CAAC,aAAa,CAAC;EACvD,IAAID,KAAK,EAAE;IACTD,MAAM,CAACG,OAAO,CAACC,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMK,YAAY,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,KAAK;EAC/D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMf,GAAG,CAACgB,IAAI,CAAC,gBAAgB,EAAE;MAAEJ,QAAQ;MAAEC,KAAK;MAAEC;IAAS,CAAC,CAAC;IAChF,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAACH,QAAQ,CAACE,IAAI,CAAC;IACrD,MAAMC,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,SAAS,GAAG,MAAAA,CAAOP,KAAK,EAAEC,QAAQ,KAAK;EAClD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMf,GAAG,CAACgB,IAAI,CAAC,aAAa,EAAE;MAAEH,KAAK;MAAEC;IAAS,CAAC,CAAC;IACnE,MAAMf,YAAY,CAACsB,OAAO,CAAC,aAAa,EAAEN,QAAQ,CAACE,IAAI,CAACK,WAAW,CAAC;IACpE,MAAMvB,YAAY,CAACsB,OAAO,CAAC,cAAc,EAAEN,QAAQ,CAACE,IAAI,CAACM,YAAY,CAAC;IACtE,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACH,QAAQ,CAACE,IAAI,CAAC;IAClD,MAAMC,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,YAAY,GAAG,MAAAA,CAAOC,SAAS,EAAEC,MAAM,KAAK;EACvD,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMf,GAAG,CAACgB,IAAI,CAAC,uBAAuB,EAAE;MAAES,SAAS;MAAEC;IAAO,CAAC,CAAC;IAC/E,OAAOX,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACH,QAAQ,CAACE,IAAI,CAAC;IACpD,MAAMC,KAAK;EACb;AACF,CAAC;AAED,eAAelB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}