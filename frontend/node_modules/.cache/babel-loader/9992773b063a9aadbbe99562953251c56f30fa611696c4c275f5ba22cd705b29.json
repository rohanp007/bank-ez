{"ast":null,"code":"\"use strict\";\n\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// This component will render a page which overflows the screen\n// if the container fills the body by comparing the size\n// This lets the document.body handle scrolling of the content\n// It's necessary for mobile browsers to be able to hide address bar on scroll\nexport const CardSheet = /*#__PURE__*/React.forwardRef(function CardSheet(_ref, ref) {\n  let {\n    enabled,\n    layout,\n    style,\n    ...rest\n  } = _ref;\n  const [fill, setFill] = React.useState(false);\n  // To avoid triggering a rerender in Card during animation we had to move\n  // the state to CardSheet. The `setPointerEvents` is then hoisted back to the Card.\n  const [pointerEvents, setPointerEvents] = React.useState('auto');\n  React.useImperativeHandle(ref, () => {\n    return {\n      setPointerEvents\n    };\n  });\n  React.useEffect(() => {\n    if (typeof document === 'undefined' || !document.body) {\n      // Only run when DOM is available\n      return;\n    }\n    const width = document.body.clientWidth;\n    const height = document.body.clientHeight;\n\n    // Workaround for mobile Chrome, necessary when a navigation happens\n    // when the address bar has already collapsed, which resulted in an\n    // empty space at the bottom of the page (matching the height of the\n    // address bar). To fix this, it's necessary to update the height of\n    // the DOM with the current height of the window.\n    // See https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n    const isFullHeight = height === layout.height;\n    const id = '__react-navigation-stack-mobile-chrome-viewport-fix';\n    if (isFullHeight) {\n      const vh = window.innerHeight * 0.01;\n      const style = document.getElementById(id) ?? document.createElement('style');\n      style.id = id;\n      style.innerHTML = [`:root { --vh: ${vh}px; }`, `body { height: calc(var(--vh, 1vh) * 100); }`].join('\\n');\n      if (!document.head.contains(style)) {\n        document.head.appendChild(style);\n      }\n    } else {\n      // Remove the workaround if the stack does not occupy the whole\n      // height of the page\n      document.getElementById(id)?.remove();\n    }\n\n    // eslint-disable-next-line @eslint-react/hooks-extra/no-direct-set-state-in-use-effect\n    setFill(width === layout.width && height === layout.height);\n  }, [layout.height, layout.width]);\n  return /*#__PURE__*/_jsx(View, {\n    ...rest,\n    pointerEvents: pointerEvents,\n    style: [enabled && fill ? styles.page : styles.card, style]\n  });\n});\nconst styles = StyleSheet.create({\n  page: {\n    minHeight: '100%'\n  },\n  card: {\n    flex: 1,\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"names":["React","StyleSheet","View","jsx","_jsx","CardSheet","forwardRef","_ref","ref","enabled","layout","style","rest","fill","setFill","useState","pointerEvents","setPointerEvents","useImperativeHandle","useEffect","document","body","width","clientWidth","height","clientHeight","isFullHeight","id","vh","window","innerHeight","getElementById","createElement","innerHTML","join","head","contains","appendChild","remove","styles","page","card","create","minHeight","flex","overflow"],"sources":["C:\\Users\\rohan_gs\\bank-ez\\frontend\\node_modules\\@react-navigation\\stack\\src\\views\\Stack\\CardSheet.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View, type ViewProps } from 'react-native';\n\ntype Props = ViewProps & {\n  enabled: boolean;\n  layout: { width: number; height: number };\n  children: React.ReactNode;\n};\n\nexport type CardSheetRef = {\n  setPointerEvents: React.Dispatch<ViewProps['pointerEvents']>;\n};\n\n// This component will render a page which overflows the screen\n// if the container fills the body by comparing the size\n// This lets the document.body handle scrolling of the content\n// It's necessary for mobile browsers to be able to hide address bar on scroll\nexport const CardSheet = React.forwardRef<CardSheetRef, Props>(\n  function CardSheet({ enabled, layout, style, ...rest }, ref) {\n    const [fill, setFill] = React.useState(false);\n    // To avoid triggering a rerender in Card during animation we had to move\n    // the state to CardSheet. The `setPointerEvents` is then hoisted back to the Card.\n    const [pointerEvents, setPointerEvents] =\n      React.useState<ViewProps['pointerEvents']>('auto');\n\n    React.useImperativeHandle(ref, () => {\n      return { setPointerEvents };\n    });\n\n    React.useEffect(() => {\n      if (typeof document === 'undefined' || !document.body) {\n        // Only run when DOM is available\n        return;\n      }\n\n      const width = document.body.clientWidth;\n      const height = document.body.clientHeight;\n\n      // Workaround for mobile Chrome, necessary when a navigation happens\n      // when the address bar has already collapsed, which resulted in an\n      // empty space at the bottom of the page (matching the height of the\n      // address bar). To fix this, it's necessary to update the height of\n      // the DOM with the current height of the window.\n      // See https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n      const isFullHeight = height === layout.height;\n      const id = '__react-navigation-stack-mobile-chrome-viewport-fix';\n\n      if (isFullHeight) {\n        const vh = window.innerHeight * 0.01;\n        const style =\n          document.getElementById(id) ?? document.createElement('style');\n\n        style.id = id;\n        style.innerHTML = [\n          `:root { --vh: ${vh}px; }`,\n          `body { height: calc(var(--vh, 1vh) * 100); }`,\n        ].join('\\n');\n\n        if (!document.head.contains(style)) {\n          document.head.appendChild(style);\n        }\n      } else {\n        // Remove the workaround if the stack does not occupy the whole\n        // height of the page\n        document.getElementById(id)?.remove();\n      }\n\n      // eslint-disable-next-line @eslint-react/hooks-extra/no-direct-set-state-in-use-effect\n      setFill(width === layout.width && height === layout.height);\n    }, [layout.height, layout.width]);\n\n    return (\n      <View\n        {...rest}\n        pointerEvents={pointerEvents}\n        style={[enabled && fill ? styles.page : styles.card, style]}\n      />\n    );\n  }\n);\n\nconst styles = StyleSheet.create({\n  page: {\n    minHeight: '100%',\n  },\n  card: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n});\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,EAAEC,IAAI,QAAwB,cAAc;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAYhE;AACA;AACA;AACA;AACA,OAAO,MAAMC,SAAS,gBAAGL,KAAK,CAACM,UAAU,CACvC,SAASD,SAASA,CAAAE,IAAA,EAAsCC,GAAG,EAAE;EAAA,IAA1C;IAAEC,OAAO;IAAEC,MAAM;IAAEC,KAAK;IAAE,GAAGC;EAAK,CAAC,GAAAL,IAAA;EACpD,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGd,KAAK,CAACe,QAAQ,CAAC,KAAK,CAAC;EAC7C;EACA;EACA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GACrCjB,KAAK,CAACe,QAAQ,CAA6B,MAAM,CAAC;EAEpDf,KAAK,CAACkB,mBAAmB,CAACV,GAAG,EAAE,MAAM;IACnC,OAAO;MAAES;IAAiB,CAAC;EAC7B,CAAC,CAAC;EAEFjB,KAAK,CAACmB,SAAS,CAAC,MAAM;IACpB,IAAI,OAAOC,QAAQ,KAAK,WAAW,IAAI,CAACA,QAAQ,CAACC,IAAI,EAAE;MACrD;MACA;IACF;IAEA,MAAMC,KAAK,GAAGF,QAAQ,CAACC,IAAI,CAACE,WAAW;IACvC,MAAMC,MAAM,GAAGJ,QAAQ,CAACC,IAAI,CAACI,YAAY;;IAEzC;IACA;IACA;IACA;IACA;IACA;IACA,MAAMC,YAAY,GAAGF,MAAM,KAAKd,MAAM,CAACc,MAAM;IAC7C,MAAMG,EAAE,GAAG,qDAAqD;IAEhE,IAAID,YAAY,EAAE;MAChB,MAAME,EAAE,GAAGC,MAAM,CAACC,WAAW,GAAG,IAAI;MACpC,MAAMnB,KAAK,GACTS,QAAQ,CAACW,cAAc,CAACJ,EAAE,CAAC,IAAIP,QAAQ,CAACY,aAAa,CAAC,OAAO,CAAC;MAEhErB,KAAK,CAACgB,EAAE,GAAGA,EAAE;MACbhB,KAAK,CAACsB,SAAS,GAAG,CAChB,iBAAiBL,EAAE,OAAO,EAC1B,8CAA8C,CAC/C,CAACM,IAAI,CAAC,IAAI,CAAC;MAEZ,IAAI,CAACd,QAAQ,CAACe,IAAI,CAACC,QAAQ,CAACzB,KAAK,CAAC,EAAE;QAClCS,QAAQ,CAACe,IAAI,CAACE,WAAW,CAAC1B,KAAK,CAAC;MAClC;IACF,CAAC,MAAM;MACL;MACA;MACAS,QAAQ,CAACW,cAAc,CAACJ,EAAE,CAAC,EAAEW,MAAM,CAAC,CAAC;IACvC;;IAEA;IACAxB,OAAO,CAACQ,KAAK,KAAKZ,MAAM,CAACY,KAAK,IAAIE,MAAM,KAAKd,MAAM,CAACc,MAAM,CAAC;EAC7D,CAAC,EAAE,CAACd,MAAM,CAACc,MAAM,EAAEd,MAAM,CAACY,KAAK,CAAC,CAAC;EAEjC,oBACElB,IAAA,CAACF,IAAI;IAAA,GACCU,IAAI;IACRI,aAAa,EAAEA,aAAc;IAC7BL,KAAK,EAAE,CAACF,OAAO,IAAII,IAAI,GAAG0B,MAAM,CAACC,IAAI,GAAGD,MAAM,CAACE,IAAI,EAAE9B,KAAK;EAAE,CAC7D,CAAC;AAEN,CACF,CAAC;AAED,MAAM4B,MAAM,GAAGtC,UAAU,CAACyC,MAAM,CAAC;EAC/BF,IAAI,EAAE;IACJG,SAAS,EAAE;EACb,CAAC;EACDF,IAAI,EAAE;IACJG,IAAI,EAAE,CAAC;IACPC,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}