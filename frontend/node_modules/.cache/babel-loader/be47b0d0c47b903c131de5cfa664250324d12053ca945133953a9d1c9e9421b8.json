{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rohan_gs\\\\bank-ez\\\\frontend\\\\src\\\\screens\\\\DepositForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { View, TextInput, Button, Text, StyleSheet } from 'react-native';\nimport { depositFunds } from '../utils/api'; // Import the depositFunds function\nimport AsyncStorage from '@react-native-async-storage/async-storage'; // Import to get account UUID\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DepositForm() {\n  _s();\n  const [accountId, setAccountId] = useState('');\n  const [amount, setAmount] = useState('');\n  const [message, setMessage] = useState('');\n  const [balance, setBalance] = useState('');\n\n  // Fetch account ID from storage once the component is loaded\n  React.useEffect(() => {\n    async function fetchAccountId() {\n      try {\n        const storedAccountId = await AsyncStorage.getItem('accountUuid');\n        if (storedAccountId) {\n          setAccountId(storedAccountId); // Automatically set the accountId\n        }\n      } catch (error) {\n        console.error('Error fetching account UUID:', error);\n      }\n    }\n    fetchAccountId();\n  }, []);\n  const handleDeposit = async () => {\n    // Clear any previous messages\n    setMessage('');\n\n    // Input validation\n    if (!amount || isNaN(amount) || amount <= 0) {\n      setMessage('Please enter a valid amount greater than 0.');\n      return;\n    }\n    try {\n      // Send deposit request to the backend\n      const data = await depositFunds(accountId, parseFloat(amount));\n      setMessage(`Deposit successful! New Balance: $${data.newBalance}`);\n      setBalance(data.newBalance); // Update the balance state after successful deposit\n    } catch (err) {\n      setMessage('Deposit failed. Please check the account ID or try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Make a Deposit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      style: styles.label,\n      children: \"Account ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      placeholder: \"Account ID\",\n      value: accountId,\n      onChangeText: setAccountId,\n      style: styles.input,\n      editable: false // Account ID is set automatically and is not editable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      style: styles.label,\n      children: \"Deposit Amount\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      placeholder: \"Amount\",\n      value: amount,\n      onChangeText: setAmount,\n      keyboardType: \"numeric\",\n      style: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"Deposit\",\n      onPress: handleDeposit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), message ? /*#__PURE__*/_jsxDEV(Text, {\n      style: styles.message,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 18\n    }, this) : null, balance ? /*#__PURE__*/_jsxDEV(Text, {\n      style: styles.balance,\n      children: [\"New Balance: $\", balance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 18\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(DepositForm, \"n7w3TB5AfUW7XwCVuqlkJe0Fp0g=\");\n_c = DepositForm;\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    flex: 1,\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  label: {\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  input: {\n    borderBottomWidth: 1,\n    marginBottom: 20,\n    padding: 10\n  },\n  message: {\n    marginTop: 10,\n    color: 'green'\n  },\n  balance: {\n    marginTop: 10,\n    fontSize: 18,\n    color: 'blue'\n  }\n});\nvar _c;\n$RefreshReg$(_c, \"DepositForm\");","map":{"version":3,"names":["React","useState","View","TextInput","Button","Text","StyleSheet","depositFunds","AsyncStorage","jsxDEV","_jsxDEV","DepositForm","_s","accountId","setAccountId","amount","setAmount","message","setMessage","balance","setBalance","useEffect","fetchAccountId","storedAccountId","getItem","error","console","handleDeposit","isNaN","data","parseFloat","newBalance","err","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","label","placeholder","value","onChangeText","input","editable","keyboardType","onPress","_c","create","padding","flex","justifyContent","fontSize","marginBottom","textAlign","fontWeight","borderBottomWidth","marginTop","color","$RefreshReg$"],"sources":["C:/Users/rohan_gs/bank-ez/frontend/src/screens/DepositForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TextInput, Button, Text, StyleSheet } from 'react-native';\r\nimport { depositFunds } from '../utils/api'; // Import the depositFunds function\r\nimport AsyncStorage from '@react-native-async-storage/async-storage'; // Import to get account UUID\r\n\r\nexport default function DepositForm() {\r\n  const [accountId, setAccountId] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [balance, setBalance] = useState('');\r\n\r\n  // Fetch account ID from storage once the component is loaded\r\n  React.useEffect(() => {\r\n    async function fetchAccountId() {\r\n      try {\r\n        const storedAccountId = await AsyncStorage.getItem('accountUuid');\r\n        if (storedAccountId) {\r\n          setAccountId(storedAccountId); // Automatically set the accountId\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching account UUID:', error);\r\n      }\r\n    }\r\n\r\n    fetchAccountId();\r\n  }, []);\r\n\r\n  const handleDeposit = async () => {\r\n    // Clear any previous messages\r\n    setMessage('');\r\n\r\n    // Input validation\r\n    if (!amount || isNaN(amount) || amount <= 0) {\r\n      setMessage('Please enter a valid amount greater than 0.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Send deposit request to the backend\r\n      const data = await depositFunds(accountId, parseFloat(amount));\r\n      setMessage(`Deposit successful! New Balance: $${data.newBalance}`);\r\n      setBalance(data.newBalance); // Update the balance state after successful deposit\r\n    } catch (err) {\r\n      setMessage('Deposit failed. Please check the account ID or try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Make a Deposit</Text>\r\n      <Text style={styles.label}>Account ID</Text>\r\n      <TextInput\r\n        placeholder=\"Account ID\"\r\n        value={accountId}\r\n        onChangeText={setAccountId}\r\n        style={styles.input}\r\n        editable={false} // Account ID is set automatically and is not editable\r\n      />\r\n      <Text style={styles.label}>Deposit Amount</Text>\r\n      <TextInput\r\n        placeholder=\"Amount\"\r\n        value={amount}\r\n        onChangeText={setAmount}\r\n        keyboardType=\"numeric\"\r\n        style={styles.input}\r\n      />\r\n      <Button title=\"Deposit\" onPress={handleDeposit} />\r\n      {message ? <Text style={styles.message}>{message}</Text> : null}\r\n      {balance ? <Text style={styles.balance}>New Balance: ${balance}</Text> : null}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 20,\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    marginBottom: 20,\r\n    textAlign: 'center',\r\n  },\r\n  label: {\r\n    fontWeight: 'bold',\r\n    marginBottom: 5,\r\n  },\r\n  input: {\r\n    borderBottomWidth: 1,\r\n    marginBottom: 20,\r\n    padding: 10,\r\n  },\r\n  message: {\r\n    marginTop: 10,\r\n    color: 'green',\r\n  },\r\n  balance: {\r\n    marginTop: 10,\r\n    fontSize: 18,\r\n    color: 'blue',\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}